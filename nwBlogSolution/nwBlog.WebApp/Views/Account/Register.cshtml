@using nwBlog.Entities.ValueObjects
@using System.Web.Optimization
@model RegisterViewModel

@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Register - AbcBlog</title>

    @Styles.Render("~/register/css/base")


    <link href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i" rel="stylesheet">



</head>
<body class="bg-gradient-primary">
    <div class="container">
        <div class="card o-hidden border-0 shadow-lg my-5">
            <div class="card-body p-0">
                <!-- Nested Row within Card Body -->
                <div class="row">
                    <div class="col-lg-5 d-none d-lg-block bg-register-image"></div>
                    <div class="col-lg-7">
                        <div class="p-5">
                            <div class="text-center">
                                <h1 class="h4 text-gray-900 mb-4">Hesap Oluştur</h1>
                            </div>


                            @using (Html.BeginForm())
                            {
                                <div class="user">
                                    @Html.AntiForgeryToken()
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                    <div class="form-group row">
                                        <div class="col-sm-6 mb-3 mb-sm-0">
                                            @Html.TextBoxFor(x => x.Name, new { @class = "form-control form-control-user", @placeholder = "Adınız" })
                                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-sm-6">
                                            @Html.TextBoxFor(x => x.Surname, new { @class = "form-control form-control-user", @placeholder = "Soyadınız" })
                                            @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        <div class="col-sm-6 mb-3 mb-sm-0">
                                            @Html.TextBoxFor(x => x.Username, new { @class = "form-control form-control-user", @placeholder = "Kullanıcı Adınız" })
                                            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-sm-6">
                                            @Html.DropDownListFor(x => x.CityId, (SelectList)ViewBag.CityId, "Şehir", new { @class = "form-control", @style = "border-radius: 10rem;" })
                                            @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        <div class="col-sm-6 mb-3 mb-sm-0">
                                            @Html.TextBoxFor(x => x.Email, new { @class = "form-control form-control-user", @placeholder = "Eposta Adresiniz", @type = "email" })
                                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-sm-6">
                                            @Html.TextBoxFor(x => x.ReEmail, new { @class = "form-control form-control-user", @placeholder = "Eposta Adresiniz (Tekrar)", @type = "email" })
                                            @Html.ValidationMessageFor(model => model.ReEmail, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <div class="col-sm-6 mb-3 mb-sm-0">
                                            @Html.PasswordFor(x => x.Password, new { @class = "form-control form-control-user", @placeholder = "Parolanız" })
                                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-sm-6">
                                            @Html.PasswordFor(x => x.RePassword, new { @class = "form-control form-control-user", @placeholder = "Parolanız (Tekrar)" })
                                            @Html.ValidationMessageFor(model => model.RePassword, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <button type="submit" class="btn btn-primary btn-user btn-block">
                                        <span style="font-size:20px;">Kayıt Ol</span>
                                    </button>
                                    <hr>

                                </div>
                            }

                            <br /><br />                  
                            <div class="text-center">
                                <a class="btn btn-outline-primary btn-sm" href="@Url.Action("Login","Account")">Hesabım var. Giriş Yap</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @Scripts.Render("~/register/js/base")

</body>
</html>